// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model BankAccount {
  id                 String    @id @default(cuid())
  xeroAccountId      String    @unique
  name               String
  code               String?
  currencyCode       String?
  status             String?
  bankName           String?
  accountNumber      String?
  balance            Float     @default(0)
  balanceLastUpdated DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  
  transactions       BankTransaction[]
  
  @@index([xeroAccountId])
}

model BankTransaction {
  id                String   @id @default(cuid())
  xeroTransactionId String   @unique
  bankAccountId     String
  date              DateTime
  amount            Float
  currencyCode      String?
  type              String   // 'SPEND' or 'RECEIVE'
  status            String   // 'AUTHORISED', 'DELETED', etc
  isReconciled      Boolean  @default(false)
  reference         String?
  description       String?
  contactName       String?
  lineItems         String?  // Store line items as JSON string
  hasAttachments    Boolean  @default(false)
  
  // Categorization (rules removed)
  accountCode       String?
  taxType           String?
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  lastSyncedAt      DateTime @default(now())
  
  bankAccount       BankAccount @relation(fields: [bankAccountId], references: [id])
  
  @@index([xeroTransactionId])
  @@index([bankAccountId])
  @@index([date])
  @@index([isReconciled])
}

model SyncLog {
  id             String   @id @default(cuid())
  syncType       String   // 'bank_accounts', 'transactions'
  status         String   // 'success', 'failed', 'partial'
  startedAt      DateTime
  completedAt    DateTime?
  recordsCreated Int      @default(0)
  recordsUpdated Int      @default(0)
  errorMessage   String?
  details        String? // Store details as JSON string
  
  @@index([syncType, startedAt])
}

model GLAccount {
  id                    String   @id @default(cuid())
  code                  String   @unique
  name                  String
  type                  String   // 'EXPENSE', 'REVENUE', 'ASSET', 'LIABILITY', etc.
  status                String?  // 'ACTIVE', 'ARCHIVED'
  description           String?
  systemAccount         Boolean  @default(false)
  showInExpenseClaims   Boolean  @default(false)
  enablePaymentsToAccount Boolean @default(false)
  class                 String?  // 'ASSET', 'EQUITY', 'EXPENSE', 'LIABILITY', 'REVENUE'
  reportingCode         String?
  reportingCodeName     String?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  @@index([code])
  @@index([type])
  @@index([status])
}

model StandardOperatingProcedure {
  id                    String   @id @default(cuid())
  year                  String   // '2024' or '2025'
  chartOfAccount        String   // e.g., '321 - Contract Salaries'
  pointOfInvoice        String?  // Only for 2025
  serviceType           String
  referenceTemplate     String
  referenceExample      String
  descriptionTemplate   String
  descriptionExample    String
  note                  String?
  isActive              Boolean  @default(true)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  @@unique([year, chartOfAccount, serviceType])
  @@index([year, chartOfAccount])
  @@index([isActive])
}

// Cash Flow Models
model SyncedInvoice {
  id              String   @id // Xero InvoiceID
  contactId       String
  contactName     String?
  invoiceNumber   String?
  reference       String?
  dueDate         DateTime
  date            DateTime // Invoice date
  amountDue       Float
  total           Float
  type            String   // ACCREC or ACCPAY
  status          String   @default("OPEN") // OPEN, PAID, VOIDED
  lineAmountTypes String?
  currencyCode    String?
  lastModifiedUtc DateTime
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@index([status, dueDate])
  @@index([contactId])
  @@index([type])
}

model RepeatingTransaction {
  id                 String   @id // Xero RepeatingInvoiceID
  type               String   // ACCREC or ACCPAY
  contactId          String
  contactName        String?
  scheduleUnit       String   // WEEKLY, MONTHLY
  scheduleInterval   Int
  nextScheduledDate  DateTime?
  endDate            DateTime?
  amount             Float
  total              Float
  status             String
  reference          String?
  lastModifiedUtc    DateTime
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  
  @@index([nextScheduledDate])
  @@index([status])
  @@index([type])
}

model CashFlowBudget {
  id               String   @id @default(cuid())
  accountCode      String
  accountName      String
  category         String   // REVENUE, EXPENSE, TAX, etc
  monthYear        String   // Format: "2024-01"
  budgetedAmount   Float
  actualAmount     Float    @default(0)
  variance         Float    @default(0)
  notes            String?
  importedFrom     String?  // "xero_export" or "manual"
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  
  @@unique([accountCode, monthYear])
  @@index([monthYear])
  @@index([category])
}

model CashFlowForecast {
  id                String   @id @default(cuid())
  date              DateTime
  openingBalance    Float
  
  // Inflows
  fromInvoices      Float    @default(0)
  fromRepeating     Float    @default(0)
  fromOther         Float    @default(0)
  totalInflows      Float    @default(0)
  
  // Outflows
  toBills           Float    @default(0)
  toRepeating       Float    @default(0)
  toTaxes           Float    @default(0)
  toPatterns        Float    @default(0)
  toBudgets         Float    @default(0)
  totalOutflows     Float    @default(0)
  
  closingBalance    Float
  
  // Scenarios
  bestCase          Float?
  worstCase         Float?
  
  // Metadata
  confidenceLevel   Float    @default(0.8)
  alerts            String?  // JSON array of alerts
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  @@unique([date])
  @@index([date])
}

model PaymentPattern {
  id                String   @id @default(cuid())
  contactId         String
  contactName       String
  type              String   // CUSTOMER or SUPPLIER
  averageDaysToPay  Float
  onTimeRate        Float    // Percentage paid on time
  earlyRate         Float    // Percentage paid early
  lateRate          Float    // Percentage paid late
  sampleSize        Int      // Number of invoices analyzed
  lastCalculated    DateTime
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  @@unique([contactId, type])
  @@index([contactId])
}

model TaxObligation {
  id               String   @id @default(cuid())
  type             String   // VAT, PAYE_NI, CORPORATION_TAX
  dueDate          DateTime
  amount           Float
  status           String   @default("PENDING") // PENDING, PAID
  periodStart      DateTime?
  periodEnd        DateTime?
  reference        String?
  notes            String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  
  @@index([dueDate])
  @@index([type])
  @@index([status])
}

model CashFlowSyncLog {
  id             String   @id @default(cuid())
  syncType       String   // DELTA or FULL_RECONCILIATION
  entityType     String   // invoices, bills, repeating, etc
  startedAt      DateTime
  completedAt    DateTime?
  itemsSynced    Int      @default(0)
  itemsCreated   Int      @default(0)
  itemsUpdated   Int      @default(0)
  itemsDeleted   Int      @default(0)
  lastModifiedAfter DateTime? // For delta syncs
  status         String   @default("IN_PROGRESS") // IN_PROGRESS, SUCCESS, FAILED
  errorMessage   String?
  
  @@index([syncType, completedAt])
  @@index([entityType])
}

